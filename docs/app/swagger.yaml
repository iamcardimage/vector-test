basePath: /
definitions:
  models.ClientDetailResponse:
    properties:
      birth_place:
        type: string
      birthday:
        type: string
      contact_email:
        type: string
      created_lk_at:
        type: string
      external_risk_level:
        type: string
      id:
        type: integer
      inn:
        type: string
      main_phone:
        type: string
      name:
        type: string
      needs_second_part:
        type: boolean
      pass_issue_date:
        type: string
      pass_issuer:
        type: string
      pass_issuer_code:
        type: string
      pass_number:
        type: string
      pass_series:
        type: string
      patronymic:
        type: string
      second_part:
        $ref: '#/definitions/models.SecondPartResponse'
      second_part_created:
        type: boolean
      snils:
        type: string
      surname:
        type: string
      updated_lk_at:
        type: string
      version:
        type: integer
    type: object
  models.ErrorResponse:
    properties:
      error:
        example: client not found
        type: string
    type: object
  models.GetClientResponse:
    properties:
      ad_source:
        additionalProperties: true
        type: object
      agent_id:
        example: 456
        type: integer
      agent_point_id:
        example: 789
        type: integer
      birth_place:
        example: Test City
        type: string
      birthday:
        example: "1990-01-01"
        type: string
      block_type:
        example: ""
        type: string
      blocked:
        example: false
        type: boolean
      blocked_reason:
        example: ""
        type: string
      checks:
        additionalProperties: true
        type: object
      city:
        example: Москва
        type: string
      client_id:
        example: 12345
        type: integer
      contact_email:
        example: test@example.com
        type: string
      corps:
        example: 1
        type: integer
      country:
        example: Россия
        type: string
      created_lk_at:
        example: "2024-01-01T10:00:00.000+03:00"
        type: string
      current_sign_in_at:
        format: date-time
        type: string
      data_received_digital_profile:
        example: true
        type: boolean
      district:
        example: Тверской
        type: string
      document_country:
        example: RU
        type: string
      document_type:
        example: passport
        type: string
      esia_id:
        example: 98765
        type: integer
      external_id:
        example: 54321
        type: integer
      external_id_str:
        example: EXT_12345
        type: string
      external_risk_level:
        example: low
        type: string
      fill_stage:
        example: completed
        type: string
      flat:
        example: 25
        type: integer
      from_company_settings:
        additionalProperties: true
        type: object
      hash:
        example: abc123def456
        type: string
      house:
        example: "10"
        type: string
      id:
        example: 12345
        type: integer
      identification_type:
        example: passport
        type: string
      index:
        example: 123456
        type: integer
      inn:
        example: "123456789012"
        type: string
      is_american_national:
        example: false
        type: boolean
      is_current:
        example: true
        type: boolean
      is_filled:
        example: true
        type: boolean
      is_rf_resident:
        example: true
        type: boolean
      is_rf_taxpayer:
        example: true
        type: boolean
      is_valid_info:
        example: true
        type: boolean
      legal_capacity:
        example: full
        type: string
      locked_at:
        format: date-time
        type: string
      login:
        example: user_login
        type: string
      main_phone:
        example: "1234567890"
        type: string
      male:
        example: true
        type: boolean
      manager:
        additionalProperties: true
        type: object
      name:
        example: Иван
        type: string
      need_to_set_password:
        example: false
        type: boolean
      needs_second_part:
        example: true
        type: boolean
      note:
        additionalProperties: true
        type: object
      pass_issue_date:
        example: 01.01.2020
        type: string
      pass_issuer:
        example: MVD Test District
        type: string
      pass_issuer_code:
        example: 100-001
        type: string
      pass_number:
        example: "123456"
        type: string
      pass_series:
        example: "1234"
        type: string
      patronymic:
        example: Иванович
        type: string
      person_info:
        additionalProperties: true
        type: object
      pifs_portfolio_code:
        example: 123
        type: integer
      qualified_investor:
        example: false
        type: boolean
      raw:
        additionalProperties: true
        type: object
      region:
        example: Московская область
        type: string
      risk_level:
        example: low
        type: string
      second_part:
        properties:
          client_version:
            example: 1
            type: integer
          due_at:
            format: date-time
            type: string
          is_current:
            example: true
            type: boolean
          risk_level:
            example: low
            type: string
          status:
            example: draft
            type: string
          version:
            example: 1
            type: integer
        type: object
      second_part_created:
        example: true
        type: boolean
      second_part_trigger_hash:
        example: xyz789abc123
        type: string
      settings:
        additionalProperties: true
        type: object
      sign_in_count:
        example: 5
        type: integer
      signature_allowed_numbers:
        additionalProperties: true
        type: object
      signature_type:
        example: electronic
        type: string
      snils:
        example: "12345678901"
        type: string
      status:
        example: unchanged
        type: string
      street:
        example: ул. Тверская
        type: string
      surname:
        example: Иванов
        type: string
      synced_at:
        format: date-time
        type: string
      tax_status:
        example: resident
        type: string
      updated_lk_at:
        example: "2024-01-01T12:00:00.000+03:00"
        type: string
      valid_from:
        format: date-time
        type: string
      valid_to:
        format: date-time
        type: string
      version:
        example: 1
        type: integer
    type: object
  models.GetContractResponse:
    properties:
      anketa:
        example: ANK456
        type: string
      calculated_profile_id:
        example: 222
        type: integer
      closed_at:
        format: date-time
        type: string
      comment:
        example: Основной договор
        type: string
      contract_owner_id:
        example: 789
        type: integer
      contract_owner_type:
        example: individual
        type: string
      created_at:
        format: date-time
        type: string
      depo_accounts_type:
        example: standard
        type: string
      external_id:
        example: 54321
        type: integer
      hash:
        example: abc123def456
        type: string
      id:
        example: 123
        type: integer
      inner_code:
        example: BRK-001
        type: string
      is_personal_invest_account:
        example: true
        type: boolean
      is_personal_invest_account_new:
        example: false
        type: boolean
      kind:
        example: broking
        type: string
      owner_id:
        example: 111
        type: integer
      raw:
        additionalProperties: true
        type: object
      rialto_code:
        example: RLT123
        type: string
      signed_at:
        format: date-time
        type: string
      status:
        example: active
        type: string
      strategy_id:
        example: 333
        type: integer
      strategy_name:
        example: Conservative
        type: string
      synced_at:
        format: date-time
        type: string
      tariff_id:
        example: 444
        type: integer
      tariff_name:
        example: Basic
        type: string
      updated_at:
        format: date-time
        type: string
      user_id:
        example: 12345
        type: integer
      user_login:
        example: user123
        type: string
    type: object
  models.GetSecondPartResponse:
    properties:
      approved_by_user_id:
        example: 101
        type: integer
      client_id:
        example: 123
        type: integer
      client_version:
        example: 1
        type: integer
      created_by_user_id:
        example: 456
        type: integer
      data:
        additionalProperties: true
        type: object
      due_at:
        format: date-time
        type: string
      is_current:
        example: true
        type: boolean
      reason:
        example: Additional documents required
        type: string
      risk_level:
        example: low
        type: string
      status:
        example: draft
        type: string
      updated_by_user_id:
        example: 789
        type: integer
      valid_from:
        format: date-time
        type: string
      valid_to:
        format: date-time
        type: string
      version:
        example: 2
        type: integer
    type: object
  models.ListClientsResponse:
    properties:
      clients:
        items:
          $ref: '#/definitions/models.ClientDetailResponse'
        type: array
      page:
        example: 1
        type: integer
      per_page:
        example: 10
        type: integer
      success:
        example: true
        type: boolean
      total:
        example: 150
        type: integer
      total_pages:
        example: 15
        type: integer
    type: object
  models.ListContractsResponse:
    properties:
      contracts:
        items:
          $ref: '#/definitions/models.GetContractResponse'
        type: array
      page:
        example: 1
        type: integer
      per_page:
        example: 10
        type: integer
      success:
        example: true
        type: boolean
      total:
        example: 150
        type: integer
      total_pages:
        example: 15
        type: integer
    type: object
  models.SecondPartResponse:
    properties:
      client_version:
        example: 1
        type: integer
      due_at:
        type: string
      is_current:
        example: true
        type: boolean
      risk_level:
        example: ""
        type: string
      stale:
        type: boolean
      status:
        example: draft
        type: string
      version:
        example: 3
        type: integer
    type: object
info:
  contact: {}
  description: API for app endpoints
  title: Vector App API
  version: "1.0"
paths:
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user with email, role and optional token
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          properties:
            email:
              type: string
            role:
              type: string
            token:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Created user
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input or creation failed
          schema:
            additionalProperties: true
            type: object
      summary: Create new user
      tags:
      - auth
  /auth/users:
    get:
      consumes:
      - application/json
      description: Get list of all users in the system
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: List all users
      tags:
      - auth
  /auth/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing user from the system
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success confirmation
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input or deletion failed
          schema:
            additionalProperties: true
            type: object
      summary: Delete user
      tags:
      - auth
  /auth/users/{id}/role:
    patch:
      consumes:
      - application/json
      description: Update the role of an existing user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: New role
        in: body
        name: role
        required: true
        schema:
          properties:
            role:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Updated user
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input or update failed
          schema:
            additionalProperties: true
            type: object
      summary: Update user role
      tags:
      - auth
  /auth/users/{id}/rotate-token:
    post:
      consumes:
      - application/json
      description: Generate new token for an existing user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User with new token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input or rotation failed
          schema:
            additionalProperties: true
            type: object
      summary: Rotate user token
      tags:
      - auth
  /clients:
    get:
      consumes:
      - application/json
      description: Get list of clients with optional filtering
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: per_page
        type: integer
      - description: Filter by needs second part
        in: query
        name: needs_second_part
        type: boolean
      - description: Filter by second part status (draft, completed)
        in: query
        name: sp_status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of clients
          schema:
            $ref: '#/definitions/models.ListClientsResponse'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: List clients
      tags:
      - clients
  /clients/{id}:
    get:
      consumes:
      - application/json
      description: Get complete client information including all available fields
        and second part if available
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Complete client information
          schema:
            $ref: '#/definitions/models.GetClientResponse'
        "400":
          description: Invalid client ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Client not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get client information
      tags:
      - clients
  /clients/{id}/second-part/current:
    get:
      consumes:
      - application/json
      description: Get the current active second part information for a specific client
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Current second part information
          schema:
            $ref: '#/definitions/models.GetSecondPartResponse'
        "400":
          description: Invalid client ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Second part not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get current second part for client
      tags:
      - clients
  /clients/{id}/second-part/draft:
    post:
      consumes:
      - application/json
      description: Create a new second part draft for a client
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Draft data
        in: body
        name: draft
        schema:
          properties:
            data_override:
              type: object
            risk_level:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Created second part draft
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input or creation failed
          schema:
            additionalProperties: true
            type: object
      summary: Create second part draft
      tags:
      - clients
  /clients/{id}/second-part/history:
    get:
      consumes:
      - application/json
      description: Get history of second part information for specific client
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Second part history
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid client ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get second part history for client
      tags:
      - clients
  /contracts:
    get:
      consumes:
      - application/json
      description: Get list of contracts with optional filtering
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: per_page
        type: integer
      - description: Filter by user ID
        in: query
        name: user_id
        type: integer
      - description: Filter by status (active, closed)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of contracts
          schema:
            $ref: '#/definitions/models.ListContractsResponse'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: List contracts
      tags:
      - contracts
  /contracts/{id}:
    get:
      consumes:
      - application/json
      description: Get complete contract information by contract ID
      parameters:
      - description: Contract ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Complete contract information
          schema:
            $ref: '#/definitions/models.GetContractResponse'
        "400":
          description: Invalid contract ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Contract not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get contract information
      tags:
      - contracts
  /dbping:
    get:
      responses:
        "200":
          description: db ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Database ping
      tags:
      - health
  /healthz:
    get:
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Health check
      tags:
      - health
swagger: "2.0"
