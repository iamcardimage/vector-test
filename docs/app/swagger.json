{
    "swagger": "2.0",
    "info": {
        "description": "API for app endpoints with JWT authentication",
        "title": "Vector App API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Вход в систему с email и паролем, возвращает JWT токен",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная аутентификация",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Неверный email или пароль",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/profile": {
            "get": {
                "description": "Получить информацию о текущем аутентифицированном пользователе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Получить профиль текущего пользователя",
                "responses": {
                    "200": {
                        "description": "Профиль пользователя",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Пользователь не аутентифицирован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/roles": {
            "get": {
                "description": "Получить список всех доступных ролей в системе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Получить список доступных ролей",
                "responses": {
                    "200": {
                        "description": "Список ролей",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/users": {
            "post": {
                "description": "Создать нового пользователя в системе. Доступно только администраторам.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Создание нового пользователя (только для администраторов)",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Пользователь создан",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Недостаточно прав",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/clients": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of clients with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "List clients",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by needs second part",
                        "name": "needs_second_part",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by second part status (draft, completed)",
                        "name": "sp_status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of clients",
                        "schema": {
                            "$ref": "#/definitions/models.ListClientsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get complete client information including all available fields and second part if available",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Get client information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Complete client information",
                        "schema": {
                            "$ref": "#/definitions/models.GetClientResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid client ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/{id}/history": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all versions of a specific client ordered by version (newest first)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Get client history (all versions)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client history",
                        "schema": {
                            "$ref": "#/definitions/models.ClientHistoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid client ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/{id}/history/{version}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get full data of a specific version of a client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Get specific client version",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Version number",
                        "name": "version",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client version data",
                        "schema": {
                            "$ref": "#/definitions/models.GetClientVersionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid client ID or version",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Client version not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/{id}/second-part/current": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the current active second part information for a specific client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Get current second part for client",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Current second part information",
                        "schema": {
                            "$ref": "#/definitions/models.GetSecondPartResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid client ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Second part not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/{id}/second-part/draft": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new second part draft for a client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Create second part draft",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Draft data",
                        "name": "draft",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data_override": {
                                    "type": "object"
                                },
                                "risk_level": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created second part draft",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input or creation failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/clients/{id}/second-part/history": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get history of second part information for specific client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Get second part history for client",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Second part history",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid client ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/contracts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of contracts with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "List contracts",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by user ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status (active, closed)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of contracts",
                        "schema": {
                            "$ref": "#/definitions/models.ListContractsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/contracts/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get complete contract information by contract ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Get contract information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Contract ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Complete contract information",
                        "schema": {
                            "$ref": "#/definitions/models.GetContractResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid contract ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Contract not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dbping": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Database ping",
                "responses": {
                    "200": {
                        "description": "db ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AppUser": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "description": "Имя",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isActive": {
                    "description": "Активен ли пользователь",
                    "type": "boolean"
                },
                "lastName": {
                    "description": "Фамилия",
                    "type": "string"
                },
                "middleName": {
                    "description": "Отчество (может быть пустым)",
                    "type": "string"
                },
                "passwordHash": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.ClientDetailResponse": {
            "type": "object",
            "properties": {
                "birth_place": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "contact_email": {
                    "type": "string"
                },
                "created_lk_at": {
                    "type": "string"
                },
                "external_risk_level": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "inn": {
                    "type": "string"
                },
                "main_phone": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "needs_second_part": {
                    "type": "boolean"
                },
                "pass_issue_date": {
                    "type": "string"
                },
                "pass_issuer": {
                    "type": "string"
                },
                "pass_issuer_code": {
                    "type": "string"
                },
                "pass_number": {
                    "type": "string"
                },
                "pass_series": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "second_part": {
                    "$ref": "#/definitions/models.SecondPartResponse"
                },
                "second_part_created": {
                    "type": "boolean"
                },
                "snils": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "updated_lk_at": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "models.ClientHistoryResponse": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "integer",
                    "example": 123
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GetClientResponse"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "total": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "models.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "password",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "client not found"
                }
            }
        },
        "models.GetClientResponse": {
            "type": "object",
            "properties": {
                "ad_source": {
                    "type": "object",
                    "additionalProperties": true
                },
                "agent_id": {
                    "type": "integer",
                    "example": 456
                },
                "agent_point_id": {
                    "type": "integer",
                    "example": 789
                },
                "birth_place": {
                    "type": "string",
                    "example": "Test City"
                },
                "birthday": {
                    "type": "string",
                    "example": "1990-01-01"
                },
                "block_type": {
                    "type": "string",
                    "example": ""
                },
                "blocked": {
                    "type": "boolean",
                    "example": false
                },
                "blocked_reason": {
                    "type": "string",
                    "example": ""
                },
                "checks": {
                    "type": "object",
                    "additionalProperties": true
                },
                "city": {
                    "type": "string",
                    "example": "Москва"
                },
                "client_id": {
                    "type": "integer",
                    "example": 12345
                },
                "contact_email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "corps": {
                    "type": "integer",
                    "example": 1
                },
                "country": {
                    "type": "string",
                    "example": "Россия"
                },
                "created_lk_at": {
                    "type": "string",
                    "example": "2024-01-01T10:00:00.000+03:00"
                },
                "current_sign_in_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "data_received_digital_profile": {
                    "type": "boolean",
                    "example": true
                },
                "district": {
                    "type": "string",
                    "example": "Тверской"
                },
                "document_country": {
                    "type": "string",
                    "example": "RU"
                },
                "document_type": {
                    "type": "string",
                    "example": "passport"
                },
                "esia_id": {
                    "type": "integer",
                    "example": 98765
                },
                "external_id": {
                    "type": "integer",
                    "example": 54321
                },
                "external_id_str": {
                    "type": "string",
                    "example": "EXT_12345"
                },
                "external_risk_level": {
                    "type": "string",
                    "example": "low"
                },
                "fill_stage": {
                    "type": "string",
                    "example": "completed"
                },
                "flat": {
                    "type": "integer",
                    "example": 25
                },
                "from_company_settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "hash": {
                    "type": "string",
                    "example": "abc123def456"
                },
                "house": {
                    "type": "string",
                    "example": "10"
                },
                "id": {
                    "type": "integer",
                    "example": 12345
                },
                "identification_type": {
                    "type": "string",
                    "example": "passport"
                },
                "index": {
                    "type": "integer",
                    "example": 123456
                },
                "inn": {
                    "type": "string",
                    "example": "123456789012"
                },
                "is_american_national": {
                    "type": "boolean",
                    "example": false
                },
                "is_current": {
                    "type": "boolean",
                    "example": true
                },
                "is_filled": {
                    "type": "boolean",
                    "example": true
                },
                "is_rf_resident": {
                    "type": "boolean",
                    "example": true
                },
                "is_rf_taxpayer": {
                    "type": "boolean",
                    "example": true
                },
                "is_valid_info": {
                    "type": "boolean",
                    "example": true
                },
                "legal_capacity": {
                    "type": "string",
                    "example": "full"
                },
                "locked_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "login": {
                    "type": "string",
                    "example": "user_login"
                },
                "main_phone": {
                    "type": "string",
                    "example": "1234567890"
                },
                "male": {
                    "type": "boolean",
                    "example": true
                },
                "manager": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string",
                    "example": "Иван"
                },
                "need_to_set_password": {
                    "type": "boolean",
                    "example": false
                },
                "needs_second_part": {
                    "type": "boolean",
                    "example": true
                },
                "note": {
                    "type": "object",
                    "additionalProperties": true
                },
                "pass_issue_date": {
                    "type": "string",
                    "example": "01.01.2020"
                },
                "pass_issuer": {
                    "type": "string",
                    "example": "MVD Test District"
                },
                "pass_issuer_code": {
                    "type": "string",
                    "example": "100-001"
                },
                "pass_number": {
                    "type": "string",
                    "example": "123456"
                },
                "pass_series": {
                    "type": "string",
                    "example": "1234"
                },
                "patronymic": {
                    "type": "string",
                    "example": "Иванович"
                },
                "person_info": {
                    "type": "object",
                    "additionalProperties": true
                },
                "pifs_portfolio_code": {
                    "type": "integer",
                    "example": 123
                },
                "qualified_investor": {
                    "type": "boolean",
                    "example": false
                },
                "raw": {
                    "type": "object",
                    "additionalProperties": true
                },
                "region": {
                    "type": "string",
                    "example": "Московская область"
                },
                "risk_level": {
                    "type": "string",
                    "example": "low"
                },
                "second_part": {
                    "type": "object",
                    "properties": {
                        "client_version": {
                            "type": "integer",
                            "example": 1
                        },
                        "due_at": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "is_current": {
                            "type": "boolean",
                            "example": true
                        },
                        "risk_level": {
                            "type": "string",
                            "example": "low"
                        },
                        "status": {
                            "type": "string",
                            "example": "draft"
                        },
                        "version": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                },
                "second_part_created": {
                    "type": "boolean",
                    "example": true
                },
                "second_part_trigger_hash": {
                    "type": "string",
                    "example": "xyz789abc123"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "sign_in_count": {
                    "type": "integer",
                    "example": 5
                },
                "signature_allowed_numbers": {
                    "type": "object",
                    "additionalProperties": true
                },
                "signature_type": {
                    "type": "string",
                    "example": "electronic"
                },
                "snils": {
                    "type": "string",
                    "example": "12345678901"
                },
                "status": {
                    "type": "string",
                    "example": "unchanged"
                },
                "street": {
                    "type": "string",
                    "example": "ул. Тверская"
                },
                "surname": {
                    "type": "string",
                    "example": "Иванов"
                },
                "synced_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "tax_status": {
                    "type": "string",
                    "example": "resident"
                },
                "updated_lk_at": {
                    "type": "string",
                    "example": "2024-01-01T12:00:00.000+03:00"
                },
                "valid_from": {
                    "type": "string",
                    "format": "date-time"
                },
                "valid_to": {
                    "type": "string",
                    "format": "date-time"
                },
                "version": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "models.GetClientVersionResponse": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "integer",
                    "example": 123
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "version": {
                    "$ref": "#/definitions/models.GetClientResponse"
                }
            }
        },
        "models.GetContractResponse": {
            "type": "object",
            "properties": {
                "anketa": {
                    "type": "string",
                    "example": "ANK456"
                },
                "calculated_profile_id": {
                    "type": "integer",
                    "example": 222
                },
                "closed_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "comment": {
                    "type": "string",
                    "example": "Основной договор"
                },
                "contract_owner_id": {
                    "type": "integer",
                    "example": 789
                },
                "contract_owner_type": {
                    "type": "string",
                    "example": "individual"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "depo_accounts_type": {
                    "type": "string",
                    "example": "standard"
                },
                "external_id": {
                    "type": "integer",
                    "example": 54321
                },
                "hash": {
                    "type": "string",
                    "example": "abc123def456"
                },
                "id": {
                    "type": "integer",
                    "example": 123
                },
                "inner_code": {
                    "type": "string",
                    "example": "BRK-001"
                },
                "is_personal_invest_account": {
                    "type": "boolean",
                    "example": true
                },
                "is_personal_invest_account_new": {
                    "type": "boolean",
                    "example": false
                },
                "kind": {
                    "type": "string",
                    "example": "broking"
                },
                "owner_id": {
                    "type": "integer",
                    "example": 111
                },
                "raw": {
                    "type": "object",
                    "additionalProperties": true
                },
                "rialto_code": {
                    "type": "string",
                    "example": "RLT123"
                },
                "signed_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                },
                "strategy_id": {
                    "type": "integer",
                    "example": 333
                },
                "strategy_name": {
                    "type": "string",
                    "example": "Conservative"
                },
                "synced_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "tariff_id": {
                    "type": "integer",
                    "example": 444
                },
                "tariff_name": {
                    "type": "string",
                    "example": "Basic"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "user_id": {
                    "type": "integer",
                    "example": 12345
                },
                "user_login": {
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "models.GetSecondPartResponse": {
            "type": "object",
            "properties": {
                "approved_by_user_id": {
                    "type": "integer",
                    "example": 101
                },
                "client_id": {
                    "type": "integer",
                    "example": 123
                },
                "client_version": {
                    "type": "integer",
                    "example": 1
                },
                "created_by_user_id": {
                    "type": "integer",
                    "example": 456
                },
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "due_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "is_current": {
                    "type": "boolean",
                    "example": true
                },
                "reason": {
                    "type": "string",
                    "example": "Additional documents required"
                },
                "risk_level": {
                    "type": "string",
                    "example": "low"
                },
                "status": {
                    "type": "string",
                    "example": "draft"
                },
                "updated_by_user_id": {
                    "type": "integer",
                    "example": 789
                },
                "valid_from": {
                    "type": "string",
                    "format": "date-time"
                },
                "valid_to": {
                    "type": "string",
                    "format": "date-time"
                },
                "version": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "models.ListClientsResponse": {
            "type": "object",
            "properties": {
                "clients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ClientDetailResponse"
                    }
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "per_page": {
                    "type": "integer",
                    "example": 10
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "total": {
                    "type": "integer",
                    "example": 150
                },
                "total_pages": {
                    "type": "integer",
                    "example": 15
                }
            }
        },
        "models.ListContractsResponse": {
            "type": "object",
            "properties": {
                "contracts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GetContractResponse"
                    }
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "per_page": {
                    "type": "integer",
                    "example": 10
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "total": {
                    "type": "integer",
                    "example": 150
                },
                "total_pages": {
                    "type": "integer",
                    "example": 15
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.AppUser"
                }
            }
        },
        "models.SecondPartResponse": {
            "type": "object",
            "properties": {
                "client_version": {
                    "type": "integer",
                    "example": 1
                },
                "due_at": {
                    "type": "string"
                },
                "is_current": {
                    "type": "boolean",
                    "example": true
                },
                "risk_level": {
                    "type": "string",
                    "example": ""
                },
                "stale": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string",
                    "example": "draft"
                },
                "version": {
                    "type": "integer",
                    "example": 3
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}